import{ac as i,ad as o,af as p,pb as m,b5 as l,W as a,r as n,et as y}from"./index-607cb647.js";import{j as c}from"./FeatureLayerViewBase3D-fd47a3ec.js";import"./FeatureLikeLayerView3D-05bb2950.js";import"./dehydratedFeatureComparison-1e999854.js";import"./queryForSymbologySnapping-58288d17.js";import"./hash-0ddfbf4b.js";import"./Graphics3DObjectStates-235e322c.js";import"./optimizedFeatureQueryEngineAdapter-1b2232cc.js";import"./centroid-43324cfb.js";import"./PooledRBush-634494ef.js";import"./QueryEngine-3ff9bb28.js";import"./timeSupport-53e00fec.js";import"./FeatureStore-3d329952.js";import"./BoundsStore-145f7e93.js";import"./heatmapTextureUtils-9f08bd2e.js";import"./projectExtentUtils-e9ba58b3.js";import"./LayerView3D-2d3ccbd2.js";import"./EventedSet-d58ad903.js";import"./FeatureLayerView-46645edf.js";import"./popupUtils-d115b8fc.js";import"./LayerView-4dad4e85.js";import"./RefreshableLayerView-43a7cacf.js";let t=class extends c{constructor(){super(...arguments),this.type="feature-3d",this.direct3DObjectFeatureLayerDisplayEnabled=m()}initialize(){var s;const{layer:e,view:r}=this;(s=l(e))!=null&&s.operations.supportsQuery||this.addResolvingPromise(Promise.reject(new a("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:e}))),n(e.infoFor3D)&&(this.direct3DObjectFeatureLayerDisplayEnabled?this._set("suspendResumeExtentMode","computed"):this.addResolvingPromise(Promise.reject(new a("featurelayerview3d:unsupported-geometry-type",`Unsupported geometry type ${e.geometryType}`)))),e.geometryType!=="mesh"||y(e.spatialReference,r.spatialReference)||this.addResolvingPromise(Promise.reject(new a("layerview:spatial-reference-incompatible","The spatial references of the feature layer is incompatible with the spatial reference of the view")))}get featureSpatialReference(){var e,r;return(r=(e=this.view.featureTiles)==null?void 0:e.tilingScheme)==null?void 0:r.spatialReference}};i([o({constructOnly:!0})],t.prototype,"direct3DObjectFeatureLayerDisplayEnabled",void 0),i([o()],t.prototype,"layer",void 0),t=i([p("esri.views.3d.layers.FeatureLayerView3D")],t);const A=t;export{A as default};
